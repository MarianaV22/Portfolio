{"ast":null,"code":"/* src/ScrollShowcase.js\r\nimport React, { useEffect } from 'react'\r\nimport './ScrollShowcase.css'\r\n\r\nexport default function ScrollShowcase() {\r\n  useEffect(() => {\r\n    import('https://cdn.skypack.dev/gsap@3.12.0').then(gsapModule => {\r\n      import('https://cdn.skypack.dev/gsap@3.12.0/ScrollTrigger').then(triggerModule => {\r\n        import('https://cdn.skypack.dev/tweakpane@4.0.4').then(({ Pane }) => {\r\n          const gsap = gsapModule.default;\r\n          const ScrollTrigger = triggerModule.default;\r\n          gsap.registerPlugin(ScrollTrigger);\r\n\r\n          const config = {\r\n            theme: 'dark',\r\n            animate: true,\r\n            snap: true,\r\n            start: gsap.utils.random(0, 100, 1),\r\n            end: gsap.utils.random(900, 1000, 1),\r\n            scroll: true,\r\n            debug: false,\r\n          }\r\n\r\n          const items = gsap.utils.toArray('ul li')\r\n\r\n          const update = () => {\r\n            document.documentElement.dataset.theme = config.theme\r\n            document.documentElement.dataset.syncScrollbar = config.scroll\r\n            document.documentElement.dataset.animate = config.animate\r\n            document.documentElement.dataset.snap = config.snap\r\n            document.documentElement.dataset.debug = config.debug\r\n            document.documentElement.style.setProperty('--start', config.start)\r\n            document.documentElement.style.setProperty('--hue', config.start)\r\n            document.documentElement.style.setProperty('--end', config.end)\r\n          }\r\n\r\n          update()\r\n\r\n          // ScrollTrigger animation\r\n          const dimmer = gsap\r\n            .timeline()\r\n            .to(items.slice(1), {\r\n              opacity: 1,\r\n              stagger: 0.5,\r\n            })\r\n            .to(\r\n              items.slice(0, items.length - 1),\r\n              {\r\n                opacity: 0.2,\r\n                stagger: 0.5,\r\n              },\r\n              0\r\n            )\r\n\r\n          ScrollTrigger.create({\r\n            trigger: items[0],\r\n            endTrigger: items[items.length - 1],\r\n            start: 'center center',\r\n            end: 'center center',\r\n            animation: dimmer,\r\n            scrub: 0.2,\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      \r\n      <main>\r\n        <section className=\"content fluid\">\r\n          <h2><span aria-hidden=\"true\">O que consigo fazer&nbsp;</span></h2>\r\n          <ul aria-hidden=\"true\" style={{ '--count': 22 }}>\r\n            <li style={{ '--i': 0 }}>design gráfico.</li>\r\n            <li style={{ '--i': 1 }}>UX / UI  .</li>\r\n            <li style={{ '--i': 2 }}>front-end.</li>\r\n            <li style={{ '--i': 3 }}>beckend.</li>\r\n            <li style={{ '--i': 4 }}>um pouco de tudo.</li>\r\n          </ul>\r\n        </section>\r\n  \r\n      </main>\r\n    </>\r\n  )\r\n}*/// src/ScrollShowcase.js\n// src/ScrollShowcase.js\n// src/ScrollShowcase.js\n// src/ScrollShowcase.js\nimport React,{useEffect,useRef}from'react';import gsap from'gsap';import ScrollTrigger from'gsap/ScrollTrigger';import'./ScrollShowcase.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";gsap.registerPlugin(ScrollTrigger);// As tuas skills em Português\nconst words=['design gráfico.','UX/UI.','programar.','criar coisas novas.','um pouco de tudo...'];// Cores a ciclar\nconst colors=['#E0CC5B','#268373','#B66F9E'];export default function ScrollShowcase(){const wordRef=useRef(null);const perWord=80;// px de scroll por palavra\nconst totalHeight=words.length*perWord;// ex.: 5 * 80 = 400px\nuseEffect(()=>{const obj={i:0};gsap.to(obj,{i:words.length-1,ease:'none',scrollTrigger:{trigger:'.word-section',start:'top top',end:`+=${totalHeight}px`,scrub:true},onUpdate:()=>{const idx=Math.round(obj.i);wordRef.current.textContent=words[idx];wordRef.current.style.color=colors[idx%colors.length];}});},[]);return/*#__PURE__*/_jsx(\"section\",{className:\"word-section\",style:{minHeight:`calc(${totalHeight}px + 100vh)`,paddingTop:'20vh'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"headline-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"static\",children:\"Consigo\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"dynamic\",children:/*#__PURE__*/_jsx(\"span\",{ref:wordRef,children:words[0]})})]})});}","map":{"version":3,"names":["React","useEffect","useRef","gsap","ScrollTrigger","jsx","_jsx","jsxs","_jsxs","registerPlugin","words","colors","ScrollShowcase","wordRef","perWord","totalHeight","length","obj","i","to","ease","scrollTrigger","trigger","start","end","scrub","onUpdate","idx","Math","round","current","textContent","style","color","className","minHeight","paddingTop","children","ref"],"sources":["C:/Users/andre/Desktop/Mar/Portfolio/src/componentes/ScrollShowcase.js"],"sourcesContent":["/* src/ScrollShowcase.js\r\nimport React, { useEffect } from 'react'\r\nimport './ScrollShowcase.css'\r\n\r\nexport default function ScrollShowcase() {\r\n  useEffect(() => {\r\n    import('https://cdn.skypack.dev/gsap@3.12.0').then(gsapModule => {\r\n      import('https://cdn.skypack.dev/gsap@3.12.0/ScrollTrigger').then(triggerModule => {\r\n        import('https://cdn.skypack.dev/tweakpane@4.0.4').then(({ Pane }) => {\r\n          const gsap = gsapModule.default;\r\n          const ScrollTrigger = triggerModule.default;\r\n          gsap.registerPlugin(ScrollTrigger);\r\n\r\n          const config = {\r\n            theme: 'dark',\r\n            animate: true,\r\n            snap: true,\r\n            start: gsap.utils.random(0, 100, 1),\r\n            end: gsap.utils.random(900, 1000, 1),\r\n            scroll: true,\r\n            debug: false,\r\n          }\r\n\r\n          const items = gsap.utils.toArray('ul li')\r\n\r\n          const update = () => {\r\n            document.documentElement.dataset.theme = config.theme\r\n            document.documentElement.dataset.syncScrollbar = config.scroll\r\n            document.documentElement.dataset.animate = config.animate\r\n            document.documentElement.dataset.snap = config.snap\r\n            document.documentElement.dataset.debug = config.debug\r\n            document.documentElement.style.setProperty('--start', config.start)\r\n            document.documentElement.style.setProperty('--hue', config.start)\r\n            document.documentElement.style.setProperty('--end', config.end)\r\n          }\r\n\r\n          update()\r\n\r\n          // ScrollTrigger animation\r\n          const dimmer = gsap\r\n            .timeline()\r\n            .to(items.slice(1), {\r\n              opacity: 1,\r\n              stagger: 0.5,\r\n            })\r\n            .to(\r\n              items.slice(0, items.length - 1),\r\n              {\r\n                opacity: 0.2,\r\n                stagger: 0.5,\r\n              },\r\n              0\r\n            )\r\n\r\n          ScrollTrigger.create({\r\n            trigger: items[0],\r\n            endTrigger: items[items.length - 1],\r\n            start: 'center center',\r\n            end: 'center center',\r\n            animation: dimmer,\r\n            scrub: 0.2,\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      \r\n      <main>\r\n        <section className=\"content fluid\">\r\n          <h2><span aria-hidden=\"true\">O que consigo fazer&nbsp;</span></h2>\r\n          <ul aria-hidden=\"true\" style={{ '--count': 22 }}>\r\n            <li style={{ '--i': 0 }}>design gráfico.</li>\r\n            <li style={{ '--i': 1 }}>UX / UI  .</li>\r\n            <li style={{ '--i': 2 }}>front-end.</li>\r\n            <li style={{ '--i': 3 }}>beckend.</li>\r\n            <li style={{ '--i': 4 }}>um pouco de tudo.</li>\r\n          </ul>\r\n        </section>\r\n  \r\n      </main>\r\n    </>\r\n  )\r\n}*/\r\n \r\n\r\n// src/ScrollShowcase.js\r\n\r\n// src/ScrollShowcase.js\r\n\r\n// src/ScrollShowcase.js\r\n\r\n// src/ScrollShowcase.js\r\n\r\nimport React, { useEffect, useRef } from 'react'\r\nimport gsap from 'gsap'\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport './ScrollShowcase.css'\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\n// As tuas skills em Português\r\nconst words = [\r\n  'design gráfico.', 'UX/UI.', 'programar.', \r\n  'criar coisas novas.', 'um pouco de tudo...'\r\n]\r\n\r\n// Cores a ciclar\r\nconst colors = ['#E0CC5B', '#268373', '#B66F9E']\r\n\r\nexport default function ScrollShowcase() {\r\n  const wordRef     = useRef(null)\r\n  const perWord     = 80                       // px de scroll por palavra\r\n  const totalHeight = words.length * perWord   // ex.: 5 * 80 = 400px\r\n\r\n  useEffect(() => {\r\n    const obj = { i: 0 }\r\n    gsap.to(obj, {\r\n      i: words.length - 1,\r\n      ease: 'none',\r\n      scrollTrigger: {\r\n        trigger: '.word-section',\r\n        start:   'top top',\r\n        end:     `+=${totalHeight}px`,\r\n        scrub:   true,\r\n      },\r\n      onUpdate: () => {\r\n        const idx = Math.round(obj.i)\r\n        wordRef.current.textContent = words[idx]\r\n        wordRef.current.style.color   = colors[idx % colors.length]\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <section\r\n      className=\"word-section\"\r\n      style={{\r\n        minHeight: `calc(${totalHeight}px + 100vh)`,\r\n        paddingTop: '20vh'\r\n      }}\r\n    >\r\n      <div className=\"headline-container\">\r\n        <h1 className=\"static\">Consigo</h1>\r\n        <h1 className=\"dynamic\">\r\n          <span ref={wordRef}>{words[0]}</span>\r\n        </h1>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}